[{"title":"Lexique","type":0,"sectionRef":"#","url":"/notebook-SNCF-P3/docs/lexique","content":"Lexique","keywords":""},{"title":"Planning","type":0,"sectionRef":"#","url":"/notebook-SNCF-P3/docs/planning","content":"Planning","keywords":""},{"title":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","type":0,"sectionRef":"#","url":"/notebook-SNCF-P3/docs/fondations/architecture-web","content":"","keywords":""},{"title":"Que se passe-t-il lorsque nous essayons d'accéder à un site Web​","type":1,"pageTitle":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","url":"/notebook-SNCF-P3/docs/fondations/architecture-web#que-se-passe-t-il-lorsque-nous-essayons-daccéder-à-un-site-web","content":"Nous savons que le code de notre site Web n'est pas stocké sur notre ordinateur. Nous devons introduire le code dans notre ordinateur ou navigateur où il est conservé pour visiter le site Web. Comment cela se produit-il?  Le processus est assez simple. Lorsque nous entrons une URL dans notre navigateur, le navigateur envoie une demande de données nécessaires au serveur. Le serveur répond ensuite en renvoyant le code et les données du site. Le navigateur interprète les codes et affiche le site Web à consulter. Ce processus est connu sous le nom de demande-réponse architecture de modèle ou de serveur client. "},{"title":"Que sont les clients et les serveurs?​","type":1,"pageTitle":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","url":"/notebook-SNCF-P3/docs/fondations/architecture-web#que-sont-les-clients-et-les-serveurs","content":"Les clients sont ces appareils connectés à Internet, comme nos téléphones ou ordinateurs connectés au réseau mobile ou au wi-fi. Le client est l'endroit où se déroule toute l'interaction utilisateur. Dans le contexte du Web, un client est généralement un logiciel d'accès au Web comme un navigateur, tel que Chrome, Firefox ou Safari, qui demande des pages Web et d'autres ressources à partir d'un serveur. Le navigateur Web ( client ) reçoit le code du site Web, puis le rend à l'utilisateur pour le visualiser. Bien que nous accédions au site Web à partir du navigateur, nous pouvons traiter l'ensemble de l'appareil comme un client de l'architecture client-serveur. À l'autre extrémité du spectre se trouvent des serveurs, des ordinateurs spécialisés conçus pour stocker et gérer des données, des sites Web et des applications Web. Ces serveurs sont appelés tels car ils servent du code ou des données en réponse aux demandes des clients. Un serveur attend que les demandes arrivent des clients, traite la demande, puis renvoie les informations demandées. Il existe différents types de serveurs, tels que les serveurs Web, les serveurs de fichiers et les serveurs de base de données, chacun avec sa fonction spécifique. Dans cet article, nous nous concentrerons principalement sur les serveurs Web. "},{"title":"Qu'est-ce qu'une URL et comment est-elle résolue?​","type":1,"pageTitle":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","url":"/notebook-SNCF-P3/docs/fondations/architecture-web#quest-ce-quune-url-et-comment-est-elle-résolue","content":"Une URL ( Uniform Resource Locator ) est une chaîne de caractères qui spécifie l'emplacement d'une ressource sur Internet. Les URL sont utilisées pour identifier et localiser des pages Web, des images, des vidéos et d'autres ressources sur le World Wide Web. Les URL contiennent généralement plusieurs parties, y compris un protocole, un nom de domaine et un chemin. parties d'URL  Le protocole est la méthode utilisée pour transférer des données sur Internet. Le protocole le plus utilisé pour le Web est HTTP ( Hypertext Transfer Protocol ) ou HTTPS ( HTTP Secure ), une version plus sécurisée de HTTP qui crypte les données pour plus de sécurité. Le nom de domaine est le nom unique qui identifie un site Web ou un serveur Web sur Internet. Pour accéder à un site Web, le nom est saisi dans la barre d'adresse du navigateur. Par exemple, “ github.com ” est le nom de domaine du site Web de Github. Le chemin indique l'emplacement de la ressource au sein du serveur. Cette partie URL comprend généralement le nom de fichier ou le dossier contenant la ressource, tel que “ à propos de ” ou “ contact. ” Par exemple, “ github.com/about ” est le chemin d'accès à la page du site Web “ github.com. ” Facultativement, l'URL peut également inclure une chaîne de requête, un ensemble de caractères ajoutés à la fin de l'URL qui contient des informations ou des paramètres supplémentaires pour la ressource.  Il est intéressant de noter que le nom de domaine que nous entrons dans le navigateur n'est pas l'adresse physique réelle du site Web. Chaque site Web et appareil connecté à Internet a une adresse IP unique, une étiquette numérique souvent difficile à retenir. Pour le rendre plus facile à retenir, nous utilisons des noms de domaine. Lorsqu'une URL est entrée, le navigateur envoie d'abord une demande au serveur DNS ( Domain Name System ), qui correspond au nom de domaine à l'adresse IP correspondante du site Web. C'est ce qu'on appelle DNS Lookup. Ce processus est facilité par votre fournisseur de services Internet et renvoie l'adresse IP, y compris le numéro de port du serveur accessible. "},{"title":"Établissement de protocoles​","type":1,"pageTitle":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","url":"/notebook-SNCF-P3/docs/fondations/architecture-web#établissement-de-protocoles","content":"Lorsque nous entrons une adresse Web et obtenons l'adresse IP réelle du site Web dans le navigateur, une connexion connue sous le nom de socket TCP / IP est établie entre le navigateur et le serveur. Cette connexion reste active pendant le transfert de fichiers du serveur vers le client.  TCP ( Transmission Control Protocol ) et IP ( Internet Protocol ) sont deux des principaux protocoles qui composent la suite du protocole Internet ( IP ). Ensemble, ils jettent les bases de la communication sur Internet. TCP ( Transmission Control Protocol ) est l'un des principaux protocoles de la suite de protocoles Internet ( TCP / IP ), qui est utilisé pour établir et maintenir des connexions entre les appareils sur un réseau. La fonction principale de TCP est d'assurer la livraison fiable des données entre les appareils.  TCP décompose les données en petits morceaux appelés paquets avant leur envoi sur le réseau. Chaque paquet est étiqueté avec un en-tête TCP, qui comprend les numéros de port source et de destination, et un en-tête IP qui se compose des adresses IP source et de destination, pour l'identifier. Chaque paquet contient également un numéro de séquence qui permet au dispositif récepteur de remonter les paquets dans le bon ordre. Si un paquet est perdu ou corrompu pendant la transmission, TCP retransmettra automatiquement le paquet pour s'assurer que tous les paquets sont reçus correctement. Ce protocole fournit également un contrôle des flux et un contrôle de la congestion. Le contrôle des flux garantit que l'expéditeur ne submerge pas le récepteur en envoyant trop de données à la fois, et le contrôle de la congestion garantit que le réseau ne devient pas trop chargé par trop de trafic. Il s'agit d'un protocole orienté connexion qui établit une connexion virtuelle entre l'expéditeur et le récepteur avant d'échanger des données. Une fois la connexion établie, les deux parties peuvent échanger des données de manière fiable et ordonnée. TCP est largement utilisé dans de nombreuses applications, notamment la navigation sur le Web, le courrier électronique, le transfert de fichiers et les jeux en ligne. Il s'agit d'un protocole fiable et efficace qui garantit que les données sont fournies correctement et dans le bon ordre, ce qui en fait une partie essentielle de l'infrastructure Internet. De l'autre côté, IP adresse et achemine les paquets entre les appareils d'un réseau. Il attribue une adresse IP unique à chaque appareil connecté à Internet. Lorsque les données sont envoyées d'un appareil à un autre, le protocole IP détermine l'adresse de destination et le meilleur itinéraire pour les données à prendre. Son travail consiste à envoyer et à acheminer tous les paquets via Internet. TCP et IP travaillent ensemble pour fournir une communication fiable et efficace sur Internet. IP adresse et achemine les paquets de données, tandis que TCP garantit que les données sont fournies correctement et dans le bon ordre. Il s'agit de protocoles de communication ou du système de contrôle des fondamentaux d'Internet qui définit et définit les règles de déplacement des données sur le Web. Le protocole de communication fixe les règles de communication de deux ou plusieurs parties en leur sein. Une fois la connexion établie, le processus de communication commence par une requête HTTP envoyée depuis le navigateur. HTTP, ou Hypertext Transfer Protocol (protocole de transfert hypertexte), est le protocole standard de transmission de données sur Internet et est l'épine dorsale du World Wide Web. Il permet au navigateur d'envoyer des demandes à un serveur Web et de recevoir la réponse du serveur. HTTP est basé sur un modèle de réponse à une demande dont nous avons discuté précédemment, dans lequel un client ( tel qu'un navigateur Web ) envoie une demande à un serveur, et le serveur envoie une réponse.  Les requêtes HTTP comporte différentes parties, qui incluent la ligne de départ ( Méthode HTTP + cible de demande + Version HTTP ), en-tête de requête HTTP et corps de demande. Les méthodes HTTP les plus courantes sont GET, qui demande une ressource au serveur, et POST, qui envoie des données au serveur à traiter. Il existe également des méthodes PUT et Patch qui sont utilisées pour modifier les données. HTTP se trouve au-dessus de la pile de protocoles TCP / IP. Il est généralement utilisé avec les protocoles SSL / TLS ( Secure Sockets Layer / Transport Layer Security ) pour fournir une communication sécurisée et cryptée sur Internet. Lorsque le serveur reçoit la demande, il la traite et renvoie une réponse HTTP. La réponse HTTP est composée de plusieurs parties: La ligne de démarrage comprend la version HTTP, le code d'état et le message. La version HTTP indique la version du protocole HTTP utilisée. Le code d'état est un code numérique à trois chiffres qui indique le résultat de la demande. Le message d'état est une brève description textuelle du code d'état. L'en-tête de réponse HTTP contient des informations supplémentaires sur la réponse, telles que le type de contenu dans le corps de réponse, la date et l'heure d'envoi de la réponse et le nom du serveur. Le corps de réponse contient les données réelles ou le fichier HTML qui ont été demandés. Le développeur principal est responsable de la spécification des données incluses dans l'en-tête de réponse. Ces données peuvent inclure des éléments tels que le type de contenu, la date et l'heure et le nom du serveur. Dans le corps de réponse, nous obtenons les données ou le fichier HTML demandés dans la demande d'origine. Si le serveur ne peut pas localiser la page demandée, il enverra un message d'erreur HTTP 404 indiquant que la page n'a pas pu être trouvée.  "},{"title":"Que se passe-t-il ensuite après que notre navigateur a reçu la réponse?​","type":1,"pageTitle":"Comprendre l'architecture du Web: un guide sur le fonctionnement d'Internet","url":"/notebook-SNCF-P3/docs/fondations/architecture-web#que-se-passe-t-il-ensuite-après-que-notre-navigateur-a-reçu-la-réponse","content":" Lorsqu'un navigateur Web reçoit un document HTML ( Hypertext Markup Language ) d'un serveur Web, il analyse le document pour le convertir en une représentation visuelle qui peut être affichée à l'utilisateur. Le processus d'analyse d'un document HTML comprend les étapes suivantes: Le navigateur commence par lire le code HTML de haut en bas, ligne par ligne. En lisant le code, le navigateur recherche des balises, qui sont utilisées pour définir la structure et la mise en page du document. Par exemple, la balise &lt; html &gt; indique le début d'un document HTML, et les balises &lt; head &gt; et &lt; body &gt; indiquent le début des sections tête et corps du document, respectivement. Le navigateur comprend comment interpréter le code par un algorithme d'analyse HTML. Lorsque le navigateur rencontre des balises, il crée des éléments correspondants dans le modèle d'objet de document ( DOM ), une représentation arborescente du document HTML. Le navigateur l'utilise pour comprendre comment la page doit être rendue et affichée. Chaque élément du DOM correspond à une seule balise dans le code HTML, et nous pouvons manipuler ces éléments en scriptant un langage comme JavaScript.  Le navigateur analyse le document pour des actifs supplémentaires afin de rendre la page correctement. Ces actifs peuvent inclure des fichiers CSS, des fichiers JavaScript, des images et d'autres fichiers multimédias. Lorsque le navigateur rencontre une référence à un actif dans le document HTML, il envoie une demande supplémentaire au serveur pour récupérer cet actif. Le navigateur répétera ce processus pour chaque actif qu'il rencontre. Par exemple, si le document HTML est lié. Pour un fichier CSS, le navigateur demandera au serveur de récupérer ce fichier. Le fichier CSS sera ensuite analysé et utilisé pour appliquer les styles visuels aux éléments définis dans le HTML. De même, s'il y a des images sur la page, le navigateur enverra une demande au serveur pour chaque image et les rendra sur la page. Il est important de noter que le navigateur ne téléchargera et n'analysera que les actifs nécessaires pour la fenêtre actuelle ou la partie visible de la page Web. C'est ce qu'on appelle le chargement paresseux. Lorsque l'utilisateur fait défiler la page, le navigateur téléchargera et analysera les actifs supplémentaires au besoin. Ce téléchargement et cette analyse d'actifs supplémentaires peuvent avoir un impact sur les performances de la page Web, car cela peut prendre du temps pour récupérer et traiter ces fichiers. Par conséquent,les développeurs doivent optimiser le chargement de ces actifs pour garantir que la page se charge rapidement et efficacement. Il est important de comprendre que HTML ne fournit pas d'informations sur la façon dont un site Web doit apparaître visuellement. Il définit uniquement la structure et indique au navigateur les différentes parties du contenu, comme les en-têtes, les images et les paragraphes. CSS ( Feuilles de style en cascade ) fournit des informations de style visuel et de présentation pour une page Web. CSS permet aux développeurs de spécifier la police, la couleur, la taille et la position des éléments sur une page Web, ainsi que d'autres propriétés visuelles. CSS peut être lié à un document HTML et sera utilisé pour appliquer les styles aux éléments définis dans le HTML. Le navigateur utilise également JavaScript pour ajouter des fonctionnalités dynamiques aux pages Web, comme la validation de formulaire et les éléments interactifs. Une fois le processus d'analyse terminé, le navigateur rend la représentation visuelle du document HTML, avec laquelle l'utilisateur peut interagir et afficher dans la fenêtre du navigateur. Le processus d'analyse est complexe, mais il est effectué rapidement et efficacement par des navigateurs Web modernes, permettant aux utilisateurs d'interagir de manière transparente avec les pages Web. Après tout analyser, la connexion est fermée. C'est tout pour l'instant! Cependant, de nombreux autres processus et technologies complexes font fonctionner Internet. Cet article devrait vous donner un aperçu des parties essentielles du Web, mais gardez à l'esprit qu'il y a beaucoup plus à apprendre et à explorer dans le domaine du Web. Bonne apprentissage! Article original en anglaisEcris par Faisal@thefaisal. "},{"title":"Introduction HTML","type":0,"sectionRef":"#","url":"/notebook-SNCF-P3/docs/front-end/introduction-html","content":"","keywords":""},{"title":"Les bases d'un site​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#les-bases-dun-site","content":""},{"title":"Qu'est-ce qu'une page web ?​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#quest-ce-quune-page-web-","content":"→ Un fichier texte (par exemple en .html) éditable comportant des éléments avec du sens. On parle de sens sémantique → Une page web peut contenir du texte, des liens vers d'autres pages, ou plus largement, des liens vers d'autres types de fichier (images, vidéo, etc) "},{"title":"Qu'est-ce qu'un site web ?​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#quest-ce-quun-site-web-","content":"→ Plusieurs pages web liées formant un ensemble cohérent dans la plupart du temps (on essaye en tout cas !) → Le réseau internet permet d'y avoir accès partout dans le monde, pour les sites web publiés et rendu disponible au public. La suite tu la connais, il te suffit d'y accéder via ton navigateur en tapant l'URL de ton site préféré (par exemple : https://estcequecestbientotleweekend.fr/) et bam le site web s'affiche dans ton navigateur ! "},{"title":"Pour aller plus loin ?​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#pour-aller-plus-loin-","content":"→ Tim Berners-Lee ? Qui est ce Monsieur important pour le Web 🙏 (Wikipedia) → W3C : World Wide Web Consortium (Website) → Validateur syntaxique W3C (Website)  "},{"title":"Syntaxe HTML : balises, éléments, attributs​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#syntaxe-html--balises-éléments-attributs","content":""},{"title":"Qu'est-ce qu’une balise ?​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#quest-ce-quune-balise-","content":"Elles permettent de structurer le contenu de ta pageChaque balise possède un rôle précis et a donc un poids sémantique : Dans une page, une balise h1 comportera une information importante, par exemple un titre, tandis qu'un p ne servira qu'à afficher du texte.Par convention, toute balise ouverte doit être fermée (même s'il y a quelques exceptions)Une balise est composée d'un nom et d'attributs Un exemple de balise span au sein d'une page HTML &lt;h1&gt;Hello World !&lt;/h1&gt;  → Les spécifications HTML définissent les noms des balises : &lt;html&gt;, &lt;body&gt;, &lt;span&gt;, &lt;img&gt;, &lt;div&gt;, &lt;a&gt;, &lt;p&gt;, &lt;header&gt;... Pour avoir la liste exhaustive de tous les éléments, direction la documentation ! 👉 Mozilla Developper Network Docs "},{"title":"Imbrication de balises​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#imbrication-de-balises","content":"Après avoir parlé de la plus petite brique d'un site, qu'est-ce qu'on en fait ? L'idée est dans le titre, il est possible d'imbriquer des balises pour obtenir une organisation hiérarchique : See the Pen &lt;a href=&quot;https://codepen.io/Jeremy_Bojko/pen/eYRdGeg&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Imbrication balise&lt;/a&gt; by Jérémy Bojko (&lt;a href=&quot;https://codepen.io/Jeremy_Bojko&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@Jeremy_Bojko&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. Attention à imbriquer correctement tes éléments, l'ordre a du sens et le code ci-dessus n'est pas le même que celui-ci dessous : See the Pen &lt;a href=&quot;https://codepen.io/Jeremy_Bojko/pen/mdwrBXv&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Imbrication HTML 2&lt;/a&gt; by Jérémy Bojko (&lt;a href=&quot;https://codepen.io/Jeremy_Bojko&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@Jeremy_Bojko&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. Même si visuellement on obtient pour l'instant le même résultat, la structure de nos 2 pages sont bien différentes. 🕹️ Pour expérimenter c'est ici : See the Pen &lt;a href=&quot;https://codepen.io/Jeremy_Bojko/pen/zYovqgR&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Imbrication balise&lt;/a&gt; by Jérémy Bojko (&lt;a href=&quot;https://codepen.io/Jeremy_Bojko&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@Jeremy_Bojko&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Attributs et valeurs​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#attributs-et-valeurs","content":"→ Il est possible d’ajouter des attributs aux balises pour modifier son comportement ou donner plus de précision sur certains paramètres (source d’une image, classe, liens, etc) → Plusieurs attributs peuvent être mis sur une balise &lt;span class=&quot;nom-classe&quot;&gt; Hello World ! &lt;/span&gt;  Ici, on a donc un élément HTML composé : d’une balise : spand’un attribut : classd’une valeur pour cet attribut : nom-classeet du contenu de notre élément : Hello World ! → Il est possible de visualiser les différents attributs existants sur la doc : 👉 Mozilla Docs 💻 Essayer de rechercher dans la console de votre navigateur Sur Firefox : clic droit sur un élément d'une page - inspecter - onglet Inspecteur - clic droit sur un élément - Afficher les propriétés DOMSur Chrome : clic droit sur un élément d'une page) inspecter - onglet Properties ⚠️ Les attributs sont toujours positionnés dans la balise ouvrante ! "},{"title":"Quelques exemples​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#quelques-exemples","content":"&lt;img src=&quot;logo.png&quot; width=&quot;200&quot; height=&quot;200&quot; alt=&quot;logo Simplon&quot; /&gt;  Ici les attributs de notre balise img sont : src : servant à définir le fichier image que tu vas afficher sur ta pagewidth : servant à définir la largeur de ton imageheight : servant à définir la hauteur de ton imagealt : servant à afficher un texte alternatif descriptif si l'image n'a pas pu être chargée, les informations de cet attribut servent aussi au malvoyant &lt;a href=&quot;https://monsite.com&quot;&gt;Mon lien vers ma ressources&lt;/a&gt;  Ici l'attribut de notre balise a est : href : servant à définir la ressource vers laquelle l'utilisateur sera redirigé lors du clic sur lien &lt;span id=&quot;mon-id&quot;&gt; Du texte en ligne &lt;/span&gt;  Ici l'attribut de notre balise span est : id : servant à définir un identifiant pour notre balise ⚠️ Cet identifiant est unique → 2 balises ne doivent pas avoir le même id &lt;p class=&quot;ma-class&quot;&gt;Mon petit paragraphe&lt;/p&gt;  Ici l'attribut de notre balise p est : class : servant à définir une classe pour notre balise ⚠️ Cette classe peut apparaitre sur plusieurs balises et une balise peut avoir plusieurs classes  "},{"title":"Autopsie d'une page HTML valide​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#autopsie-dune-page-html-valide","content":"DOCTYPE obligatoire (valider la page, version HTML, sinon peut faire bugger le navigateur)&lt;html&gt; la base de toute page : contient en général l'entête &lt;head&gt; et le corps &lt;body&gt;Attribut lang : indexation, synthèse vocale, vérification orthographique&lt;head&gt; entête du document contient : les méta-informations liens feuille css/jsUTF-8 définit l’encodage de caractère de la page (directement sous &lt;head&gt;)&lt;title&gt; contient le titre affiché dans l’onglet du navigateur (important pour le référencement)&lt;body&gt; contenu de votre page &lt;!DOCTYPE html&gt; &lt;html lang=&quot;fr&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt;  "},{"title":"Balises méta​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balises-méta","content":"Les balises méta servent à donner des paramètres (un comportement ou des informations non visibles par l'utilisateur) à votre page, plusieurs fonctions sont possibles : → Redirection automatique &lt;meta http-equiv=&quot;refresh&quot; content=&quot;5;url=https://example.com&quot; /&gt;  → Spécificité mobile (indispensable pour ne pas avoir de surprise avec le responsive) &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;  → Information de la page &lt;meta name=&quot;application-name&quot; content=&quot;OpenStreetMap&quot; /&gt;  → Référencement &lt;meta name=&quot;description&quot; content=&quot;sert au référencement&quot; /&gt;  💻 Essayer de rechercher dans la console de votre navigateur La balise meta contenant la description du site marmiton "},{"title":"Commentaires​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#commentaires","content":"Pour pouvoir insérer des commentaires dans sa page HTML vous pouvez utiliser cette notation : &lt;!DOCTYPE html&gt; &lt;html lang=&quot;fr&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- commentaire--&gt; &lt;/body&gt; &lt;/html&gt;  Ce commentaire n'apparaitra donc pas dans votre page, mais il sera visible par vos visiteurs s'ils vont fouiller dans la console du navigateur !  "},{"title":"Structurer son contenu et lui donner du sens​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#structurer-son-contenu-et-lui-donner-du-sens","content":""},{"title":"Balise div​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balise-div","content":"Permet de former des blocs dans votre pageC’est un conteneur qui peut inclure d’autres balisesAucune valeur sémantique (pas de “sens” à proprement parlé)Peut être utilisé pour regrouper des blocs et leur donner le même style css "},{"title":"Balise section​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balise-section","content":"Comme une div, mais avec du sens, vos sections symbolisent les différentes parties de votre page "},{"title":"Balise paragraphe​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balise-paragraphe","content":"Élément de type bloc, sera suivi d’un retour à la ligne ⚠️ Attention : il ne faut pas imbriquer les éléments de type &lt;p&gt; &lt;p&gt; Du texte &lt;p&gt; Encore du texte &lt;/p&gt; &lt;/p&gt;  &lt;p&gt;Du texte&lt;/p&gt; &lt;p&gt;Encore du texte&lt;/p&gt;  "},{"title":"Balise titre​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balise-titre","content":"→ Vous pouvez utiliser les balises de &lt;h1&gt; à &lt;h6&gt; Au delà passage à la ligneHiérarchisation visuelle automatique &lt;h1&gt;Titre niveau 1&lt;/h1&gt; &lt;h2&gt;Titre niveau 1&lt;/h2&gt; &lt;h3&gt;Titre niveau 1&lt;/h3&gt; &lt;h4&gt;Titre niveau 1&lt;/h4&gt; &lt;h5&gt;Titre niveau 1&lt;/h5&gt; &lt;h6&gt;Titre niveau 1&lt;/h6&gt;  Pas de &lt;hx&gt; dans un &lt;p&gt; et inversement "},{"title":"Balise blockquote​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#balise-blockquote","content":"Permet de faire mettre en place des citationsRetour à la ligne ensuite &lt;blockquote&gt;Tout seul on va plus vite, ensemble, on va plus loin&lt;/blockquote&gt;  Tout seul on va plus vite, ensemble, on va plus loin 🕹️ Pour expérimenter c'est ici : Lien vers exercice CodePen  "},{"title":"Élément de mise en forme​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#élément-de-mise-en-forme","content":"Ces élément sont inlineIl se placent autour du contenu/textePas de retour à la ligneAjout du sens à certaines partie "},{"title":"Exemple​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#exemple","content":"&lt;strong&gt; : élément sémantique, le texte sera mis en gras (fortement mis en valeur)&lt;em&gt; : élément sémantique, le texte sera mis en italique (mis en évidence)&lt;span&gt; : permet de d’appliquer un style sur une portion de texte&lt;sup&gt; : affiche un exposant&lt;sub&gt; : affiche un indice&lt;small&gt; : petit caractère comme les copyright 🕹️ Pour expérimenter c'est ici : Lien vers exercice CodePen  "},{"title":"Lien hypertext ?​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#lien-hypertext-","content":""},{"title":"Utilité​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#utilité","content":"Élément cliquable, permet de renvoyer l’utilisateur sur une nouvelle page ou permet un téléchargementMise en avant à l’aide d’un style particulier (souligné et bleu) Renvoie vers : → Page externe → Page interne → Des fichiers "},{"title":"Comment ? (page externe)​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#comment--page-externe","content":"&lt;a href=&quot;http://www.google.fr&quot; title=&quot;aller sur ggl&quot;&gt;Lien vers GGL&lt;/a&gt;  Dans cet exemple tu as : Un lien vers la page google.frUne infobulle au survol de l'élément 🕹️ Pour expérimenter c'est ici : Lien vers exercice CodePen "},{"title":"Lien interne et arborescence de ton site​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#lien-interne-et-arborescence-de-ton-site","content":"→ L’ensemble des pages d’un site sont enregistrées dans un dossier appelé racine du site. Par convention le fichier “racine” est appelé index.html S’il existe il est affiché en priorité sinon tu peux tomber sur cette visualisation :  Voici un exemple d'arborescence &quot;classique&quot; d'un site web : |Dossier Site (racine) | |-css | |- style.css | |- js | |-index.js | |index.html  🕹Télécharger le dossier ci-dessous et compléter les liens entre chaque pages Exercice-liens-hypertext.zip |Dossier Site (racine) |index.html |-pages | |- page1.html | |-sous-pages | |- page2.html | |- page3.html  "},{"title":"Lien interne et chemin relatif​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#lien-interne-et-chemin-relatif","content":"On parle de chemin relatif lorsque l'on veut faire une référence d'un fichier vers un autre. Il faut donc définir le chemin qui relie l'un à l'autre. Si 2 fichiers sont dans le même répertoire on appelle le nom du fichierSi on veut faire un lien vers un fichier dans un dossier/répertoire, on ajoute le nom du répertoire devant le nom de fichierSi on se trouve dans un dossier/répertoire on ajoute ../ devant le nom de fichier "},{"title":"D'autres utilisation des balises ancre​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#dautres-utilisation-des-balises-ancre","content":"&lt;a href=&quot;mailto:email@mail.com&quot;&gt;&lt;/a&gt;  &lt;a href=&quot;tel:0102030405&quot;&gt;&lt;/a&gt;  "},{"title":"Liste ordonnée / non ordonnées​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#liste-ordonnée--non-ordonnées","content":"&lt;ul&gt; &lt;li&gt;Élément 1&lt;/li&gt; &lt;li&gt;Élément 2&lt;/li&gt; &lt;/ul&gt;  Élément 1Élément 2 &lt;ol&gt; &lt;li&gt;Élément 1&lt;/li&gt; &lt;li&gt;Élément 2&lt;/li&gt; &lt;/ol&gt;  Élément 1Élément 2 Intérêts : → Slider d'image type carrousel → Liste de choix ou options à sélectionner → Onglet sur un site web 🕹️ Pour expérimenter c'est ici : Lien vers exercice CodePen "},{"title":"Les images​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#les-images","content":""},{"title":"Formats​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#formats","content":"JPEG (.jpg, .jpeg) : format compressé, réduction du poids de l’imageGIF (.gif) : 256 couleurs, compression sans perte, couleur de transparence, animation, utilisé pour les logosPNG (.png) : PNG8 256 couleurs, PNG24 16 millions couleur + transparence, utilisé pour les icône, logo, fond transparentSVG : icon permettant un redimensionnement sans dégradation "},{"title":"Recap​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#recap","content":"Photo → JPEG Illustration avec peu de couleur → PNG8 Illustration beaucoup de couleur et/ou transparence → PNG16 Image animée → GIF Icon redimensionnable → SVG "},{"title":"Insertion d'images​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#insertion-dimages","content":"On utilise la balise auto fermante &lt;img&gt;Alt affiche une description alternative si l’image ne se charge pas l’attribut est obligatoire mais vide si l’image est décorativelu vocalement par les lecteurs d’écranaide les personnes malvoyante  "},{"title":"Fiche récap HTML​","type":1,"pageTitle":"Introduction HTML","url":"/notebook-SNCF-P3/docs/front-end/introduction-html#fiche-récap-html","content":"👉 https://htmlcheatsheet.com "},{"title":"Introduction CSS","type":0,"sectionRef":"#","url":"/notebook-SNCF-P3/docs/front-end/introduction-css","content":"","keywords":""},{"title":"Ajouter du style à nos pages​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#ajouter-du-style-à-nos-pages","content":""},{"title":"Comment ?​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#comment-","content":"Possible d’ajouter directement dans une balise à l’aide de l’attribut style MAIS manque de maintenabilité &lt;span style=&quot;color:red;&quot;&gt;Mon texte rouge&lt;/span&gt;  Dans la balise &lt;head&gt; &lt;head&gt; &lt;!-- ... --&gt; &lt;style type=&quot;text/css&quot;&gt; span { color: red; } &lt;/style&gt; &lt;!-- ... --&gt; &lt;head&gt;&lt;/head&gt; &lt;/head&gt;   "},{"title":"Bonnes pratiques​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#bonnes-pratiques","content":"Liaison directement dans le document html dans le &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot; /&gt; &lt;!-- Ou --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot; /&gt;   "},{"title":"Les bases de la syntaxe​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#les-bases-de-la-syntaxe","content":""},{"title":"En bref​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#en-bref","content":"Sélecteur : cible l'élément sur lequel on applique les propriété (balise, class, id)Propriété : définie l’effet que l’on veut utiliser (couleur, taille, position, etc), elle sont à l'intérieur d'accoladesValeur de la propriété (red, 5px, #fff, etc)Les commentaires sont aussi possibles sélecteur { propriété: valeur; propriété: valeur; /* Commentaire */ } /* Commentaire */  → Le tout constitue une déclaration CSS  "},{"title":"Type de sélecteur, hiérarchie, parent/enfant​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#type-de-sélecteur-hiérarchie-parentenfant","content":""},{"title":"Type de sélecteur​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#type-de-sélecteur","content":"On peut sélectionner n’importe quel élément HTML pour lui appliquer un style Ici tous les textes contenus dans des balises &lt;span&gt; seront de couleur rose span { color: pink; }  Il faut bien garder en tête que l'ordre de déclaration de tes éléments à une importance : si deux sélecteurs portent sur le même élément la dernière déclaration sera la seule effective Souviens toi qu'il est possible de mettre la même classe sur plusieurs éléments html. Grâce à cela tu peux donc appliquer le même style à plusieurs éléments. h1 { color: pink; } h1 { color: blue; }  ⚠️ En css pour désigner une classe il faut que tu précèdes son nom d'un point. &lt;div class=&quot;ma-classe&quot;&gt; ce texte sera de couleur rose &lt;div&gt; &lt;p class=&quot;ma-classe&quot;&gt;et ce texte aussi&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;  .ma-classe { color: pink; }  L'inverse est aussi possible : plusieurs classes css peuvent être appliquées sur un même élément html &lt;div class=&quot;classe-bleu taille-txt&quot;&gt; ce texte sera de couleur bleu et de taille 10px &lt;div&gt; &lt;p class=&quot;classe-bleu&quot;&gt;ce texte sera juste en bleu&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;  .classe-bleu { color: blue; } .taille-txt { font-size: 10px; }  Pour sélectionner avec précision un élément possédant une classe on colle le nom de la balise avec le nom de la classe &lt;div class=&quot;classe-bleu&quot;&gt; ce texte sera de couleur bleu &lt;div&gt; &lt;p class=&quot;classe-bleu&quot;&gt;Mais pas ce texte&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;  div.classe-bleu { color: blue; }  → Test juste ici : https://codepen.io/Jeremy_Bojko/pen/abGvqaq Parlons maintenant des identifiants. En fait il n'y a pas grand chose à dire : même rôle que les classes mais il doit être unique dans la page ⚠️ En css pour désigner un identifiant il faut que tu précèdes son nom d'un dièse &lt;div id=&quot;mon-id&quot;&gt;ce texte sera de couleur rose&lt;/div&gt;  #mon-id { color: pink; }  Pour les plus fous les mélanges sont possible ! &lt;div id=&quot;mon-id&quot; class=&quot;ma-classe&quot;&gt; ce texte sera de couleur rose &lt;div class=&quot;ma-classe&quot;&gt;mais pas celui la&lt;/div&gt; &lt;/div&gt;  div#mon-id.ma-classe { color: pink; }  "},{"title":"Pseudo classes​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#pseudo-classes","content":"Une pseudo classe permet d'ajouter à un sélecteur un état spécifique dans lequel il doit être pour être ciblé et que le style s'applique à lui. &lt;div class=&quot;ma-classe&quot;&gt;ce texte sera de couleur rose au survol&lt;/div&gt;  .ma-classe:hover { color: pink; }  ⚠️ En css pour désigner une pseudo classe il faut que tu précèdes son nom de 2 points (:) 👉 Liste de toute les pseudo classes disponible : Mozilla Docs 🕹️ Pour expérimenter c'est ici : Lien vers Codepen "},{"title":"Hiérarchie et généalogie​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#hiérarchie-et-généalogie","content":"Voici un extrait de code et sa représentation schématique se faire cette représentation peut aider lorsque tu voudras agir avec précision sur certains éléments html à travers ton css &lt;div&gt; &lt;h1&gt;J'aime la papaye&lt;/h1&gt; &lt;p&gt; Pourquoi j'aime ce &lt;span&gt;fruit&lt;/span&gt;? Pour sa &lt;strong&gt;texture&lt;/strong&gt;! &lt;/p&gt; &lt;h2&gt;Les fraisiers&lt;/h2&gt; &lt;p&gt;Tout mes apprenants me font des fraisiers, et vous ?&lt;/p&gt; &lt;/div&gt;    Par exemple pour un sélecteur de descendance tu aurais ce code. Ici on agit sur tout les &lt;span&gt; enfants de &lt;p&gt; (dans l'exemple il n'y en a qu'un seul) p span { color: pink; }  ⚠️ Note bien l'espace entre le p et le span Par exemple pour une sélecteur de groupe tu aurais ce code. Ici on agit sur tout les &lt;h1&gt; et tout les&lt;h2&gt; h1, h2 { color: pink; }  Avec ces schéma il est aussi très important de bien comprendre la notion de portée de variable : Le style d'un élément html impact tout ses enfants mais peut être &quot;écrasé&quot; si la même propriété est redéfinis pour ses enfants. 🕹️ Pour expérimenter c'est ici : Lien vers Codepen 🕹️ Pour vérifier si tu as bien tout compris c'est ici : Lien vers CSS Diner  "},{"title":"Couleurs, unités​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#couleurs-unités","content":""},{"title":"Les couleurs en CSS​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#les-couleurs-en-css","content":"Notation Hexadécimal : #ffffff (blanc)Notation Hexadécimal courte : #fff (blanc)Notation RGB : rgb(255, 255, 255) / rgba(255, 255, 255, 1)Notations HSL : hsl(0, 0%, 100%) / hsla(0, 0%, 100%, 1)Mots clés : white 👉 https://htmlcolorcodes.com/fr/ 🕹️ Pour expérimenter c'est ici : Lien vers Codepen → Rendu final attendu du Codepen  Unités Le pixel : 1px (fixe, dépendante de la résolution de périphérique)Le cadratin : 1em (relative à la taille de police de l’élément parent)Si la police de base est en taille 10px alors 2em = 20pxLe pourcentage : 10% (relative à la taille de leur parent)  "},{"title":"Typographie et polices​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#typographie-et-polices","content":"body { font-family: Arial, Helvetica; }  body { font-size: 18px; }  body { line-height: 1.5; }  body { font-weight: bold; }  body { color: #ffffff; }  body { font-style: italic; }  p.align-center { text-align: center; }   "},{"title":"Bordures et background​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#bordures-et-background","content":""},{"title":"Les bordures​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#les-bordures","content":"Pour appliquer une bordure à un élément on utilise la propriété border. Elle a 3 sous propriétés : width, style et color → border : width style color; p { border: 1px solid #111111; }  On peut décomposer en 4 bordures : border-top, border-left, border-right, border-bottom p { border-top: 1px solid #111111; }  Il existe différents style de bordures : none : pas de borduredotted : pointillésdashed : tiretssolid : un trait simple p { border-top: 1px dashed #111111; }  Pour mettre en place des bordures arrondies on utilise la propriété border-radius : valeur p { border-radius: 10px; }  Et tu peux avoir mettre en place des paramètre plus en détail. Tu travailles alors coin par coin l'ordre est important : haut gauche, haut droite, bas droite, bas gauche p { border-radius: 10px 2px 5px 1px; }   "},{"title":"Dimensionnement​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#dimensionnement","content":"🕹️ Lien vers Codepen  "},{"title":"Positionnement​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#positionnement","content":"Sous forme d'exercice : lire cet article 🕹️ Pour vérifier si tout est compris direction ces exercices : Lien vers Codepen  "},{"title":"Fiche récap CSS​","type":1,"pageTitle":"Introduction CSS","url":"/notebook-SNCF-P3/docs/front-end/introduction-css#fiche-récap-css","content":"👉 https://htmlcheatsheet.com/css "}]